// Generated by Dagger (https://dagger.dev).
package com.moviediscovery.app.di;

import com.moviediscovery.app.data.local.dao.MovieDao;
import com.moviediscovery.app.data.local.database.MovieDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvideMovieDaoFactory implements Factory<MovieDao> {
  private final Provider<MovieDatabase> databaseProvider;

  public DatabaseModule_ProvideMovieDaoFactory(Provider<MovieDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public MovieDao get() {
    return provideMovieDao(databaseProvider.get());
  }

  public static DatabaseModule_ProvideMovieDaoFactory create(
      Provider<MovieDatabase> databaseProvider) {
    return new DatabaseModule_ProvideMovieDaoFactory(databaseProvider);
  }

  public static MovieDao provideMovieDao(MovieDatabase database) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideMovieDao(database));
  }
}
