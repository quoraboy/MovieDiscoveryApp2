// Generated by Dagger (https://dagger.dev).
package com.moviediscovery.app.presentation.viewmodel;

import com.moviediscovery.app.domain.usecase.GetBookmarkedMoviesUseCase;
import com.moviediscovery.app.domain.usecase.RemoveBookmarkUseCase;
import com.moviediscovery.app.domain.usecase.SearchBookmarksUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class BookmarksViewModel_Factory implements Factory<BookmarksViewModel> {
  private final Provider<GetBookmarkedMoviesUseCase> getBookmarkedMoviesUseCaseProvider;

  private final Provider<RemoveBookmarkUseCase> removeBookmarkUseCaseProvider;

  private final Provider<SearchBookmarksUseCase> searchBookmarksUseCaseProvider;

  public BookmarksViewModel_Factory(
      Provider<GetBookmarkedMoviesUseCase> getBookmarkedMoviesUseCaseProvider,
      Provider<RemoveBookmarkUseCase> removeBookmarkUseCaseProvider,
      Provider<SearchBookmarksUseCase> searchBookmarksUseCaseProvider) {
    this.getBookmarkedMoviesUseCaseProvider = getBookmarkedMoviesUseCaseProvider;
    this.removeBookmarkUseCaseProvider = removeBookmarkUseCaseProvider;
    this.searchBookmarksUseCaseProvider = searchBookmarksUseCaseProvider;
  }

  @Override
  public BookmarksViewModel get() {
    return newInstance(getBookmarkedMoviesUseCaseProvider.get(), removeBookmarkUseCaseProvider.get(), searchBookmarksUseCaseProvider.get());
  }

  public static BookmarksViewModel_Factory create(
      Provider<GetBookmarkedMoviesUseCase> getBookmarkedMoviesUseCaseProvider,
      Provider<RemoveBookmarkUseCase> removeBookmarkUseCaseProvider,
      Provider<SearchBookmarksUseCase> searchBookmarksUseCaseProvider) {
    return new BookmarksViewModel_Factory(getBookmarkedMoviesUseCaseProvider, removeBookmarkUseCaseProvider, searchBookmarksUseCaseProvider);
  }

  public static BookmarksViewModel newInstance(
      GetBookmarkedMoviesUseCase getBookmarkedMoviesUseCase,
      RemoveBookmarkUseCase removeBookmarkUseCase, SearchBookmarksUseCase searchBookmarksUseCase) {
    return new BookmarksViewModel(getBookmarkedMoviesUseCase, removeBookmarkUseCase, searchBookmarksUseCase);
  }
}
