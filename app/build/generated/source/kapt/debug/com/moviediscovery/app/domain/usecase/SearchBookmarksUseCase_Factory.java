// Generated by Dagger (https://dagger.dev).
package com.moviediscovery.app.domain.usecase;

import com.moviediscovery.app.domain.repository.MovieRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SearchBookmarksUseCase_Factory implements Factory<SearchBookmarksUseCase> {
  private final Provider<MovieRepository> repositoryProvider;

  public SearchBookmarksUseCase_Factory(Provider<MovieRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public SearchBookmarksUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static SearchBookmarksUseCase_Factory create(
      Provider<MovieRepository> repositoryProvider) {
    return new SearchBookmarksUseCase_Factory(repositoryProvider);
  }

  public static SearchBookmarksUseCase newInstance(MovieRepository repository) {
    return new SearchBookmarksUseCase(repository);
  }
}
